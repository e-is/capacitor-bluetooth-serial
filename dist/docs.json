{
  "api": {
    "name": "BluetoothSerialPlugin",
    "slug": "bluetoothserialplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "isEnabled",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "isenabled"
      },
      {
        "name": "canEnable",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [
          {
            "name": "return",
            "text": "A promise that resolves to the current state of Bluetooth, indicating if it can be enabled."
          }
        ],
        "docs": "Checks whether Bluetooth can be enabled on the device.",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "canenable"
      },
      {
        "name": "enable",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [
          {
            "name": "return",
            "text": "A promise that resolves to the current state of Bluetooth after enabling it, encapsulated as a `BluetoothState` object."
          }
        ],
        "docs": "Enables the Bluetooth functionality on the device.",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "enable"
      },
      {
        "name": "disable",
        "signature": "() => Promise<BluetoothState>",
        "parameters": [],
        "returns": "Promise<BluetoothState>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "Disable bluetooth (turn bluetooth off)",
        "complexTypes": [
          "BluetoothState"
        ],
        "slug": "disable"
      },
      {
        "name": "startEnabledNotifications",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "Start to listen bluetooth state changes (will emit a 'onEnabledChanged' event when state changed)",
        "complexTypes": [],
        "slug": "startenablednotifications"
      },
      {
        "name": "stopEnabledNotifications",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "Stop to listen bluetooth state changes",
        "complexTypes": [],
        "slug": "stopenablednotifications"
      },
      {
        "name": "scan",
        "signature": "() => Promise<BluetoothScanResult>",
        "parameters": [],
        "returns": "Promise<BluetoothScanResult>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothScanResult"
        ],
        "slug": "scan"
      },
      {
        "name": "connect",
        "signature": "(options: BluetoothConnectOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothConnectOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothConnectOptions"
        ],
        "slug": "connect"
      },
      {
        "name": "connectInsecure",
        "signature": "(options: BluetoothConnectOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothConnectOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothConnectOptions"
        ],
        "slug": "connectinsecure"
      },
      {
        "name": "disconnect",
        "signature": "(options: BluetoothConnectOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothConnectOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothConnectOptions"
        ],
        "slug": "disconnect"
      },
      {
        "name": "isConnected",
        "signature": "(options: BluetoothConnectOptions) => Promise<BluetoothConnectResult>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothConnectOptions"
          }
        ],
        "returns": "Promise<BluetoothConnectResult>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothConnectResult",
          "BluetoothConnectOptions"
        ],
        "slug": "isconnected"
      },
      {
        "name": "read",
        "signature": "(options: BluetoothReadOptions) => Promise<BluetoothReadResult>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothReadOptions"
          }
        ],
        "returns": "Promise<BluetoothReadResult>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothReadResult",
          "BluetoothReadOptions"
        ],
        "slug": "read"
      },
      {
        "name": "readUntil",
        "signature": "(options: BluetoothReadUntilOptions) => Promise<BluetoothReadResult>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothReadUntilOptions"
          }
        ],
        "returns": "Promise<BluetoothReadResult>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothReadResult",
          "BluetoothReadUntilOptions"
        ],
        "slug": "readuntil"
      },
      {
        "name": "write",
        "signature": "(options: BluetoothWriteOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothWriteOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothWriteOptions"
        ],
        "slug": "write"
      },
      {
        "name": "startNotifications",
        "signature": "(options: BluetoothStartNotificationsOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothStartNotificationsOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothStartNotificationsOptions"
        ],
        "slug": "startnotifications"
      },
      {
        "name": "stopNotifications",
        "signature": "(options: BluetoothStopNotificationsOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BluetoothStopNotificationsOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BluetoothStopNotificationsOptions"
        ],
        "slug": "stopnotifications"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onRead', listenerFunc: (result: BluetoothReadResult) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onRead'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(result: BluetoothReadResult) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "Listen for device input value",
        "complexTypes": [
          "PluginListenerHandle",
          "BluetoothReadResult"
        ],
        "slug": "addlisteneronread-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'onEnabledChanged', listenerFunc: (result: BluetoothState) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'onEnabledChanged'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(result: BluetoothState) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "Listen for bluetooth state changed",
        "complexTypes": [
          "PluginListenerHandle",
          "BluetoothState"
        ],
        "slug": "addlisteneronenabledchanged-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "0.0.5"
          }
        ],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "BluetoothState",
      "slug": "bluetoothstate",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "enabled",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "BluetoothScanResult",
      "slug": "bluetoothscanresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "devices",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "BluetoothDevice"
          ],
          "type": "BluetoothDevice[]"
        }
      ]
    },
    {
      "name": "BluetoothDevice",
      "slug": "bluetoothdevice",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "name",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "id",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "class",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "uuid",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "rssi",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "number"
        }
      ]
    },
    {
      "name": "BluetoothConnectOptions",
      "slug": "bluetoothconnectoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothConnectResult",
      "slug": "bluetoothconnectresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "connected",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "BluetoothReadResult",
      "slug": "bluetoothreadresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "value",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothReadOptions",
      "slug": "bluetoothreadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothReadUntilOptions",
      "slug": "bluetoothreaduntiloptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "delimiter",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothWriteOptions",
      "slug": "bluetoothwriteoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "value",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothStartNotificationsOptions",
      "slug": "bluetoothstartnotificationsoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "delimiter",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "BluetoothStopNotificationsOptions",
      "slug": "bluetoothstopnotificationsoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "address",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}